https://github.com/SharvariGadam/DevOps.git

Docker Commands
---------------

1. docker --version 			: To display the docker version.

2. docker images			: To display the docker images in the local machine

3. docker pull <imagename>		: To pull the image from the dockerhub

4. docker push <imagename>		: To push the image into the dockerhub

5. docker ps 				: To list all the running containers.

6. docker ps -a 			: To list all the containers

7. docker run -d -i -t --name <containername> -p hostport:containerPort <imagename> :

To create a container and run in the background with the given containername assigned and mapped with the
host machine port number.


8. docker exec -it <containerName> /bin/sh	: to move internally into the running container.

9. docker stop <containername>		: To stop the running container

10. docker start <containername>	: To start the stopped container.

11. docker inspect <containername>	: To check the details of container.

12. docker save -o <imagetar.gz> <imagename>	:To create a tar file for the given image

13. docker import <imagetar.gz>		: To extract the image from the given tar.gz file

14. docker rm				: to remove the docker containers.

15. docker rmi				: to remove the docker images
					(before removing any image ensure its conrresponding containers are all
					  destroyed)

Note: To execute the commands in the linux env., add sudo before the docker commands 

==============================================================================

1. Base Image
	FROM openjdk

2. Author Info
    [optional]
       MAINTAINER <emailid of author>


3. executables 

     RUN  --  this will execute any linux command
     COPY -- used to copy the contents from host machine to container
     ADD  -- used to copy the contents either from locally or from external site
     EXPOSE --- used to expose the ports inside the container to outside world
     ENV  --- Used to set the environment variables
     CMD  --- It is used to excute the statement at start of your container
     VOLUME 	-- It is used to mount the space between the host to container
     WORKDIR  --  It is used to specifiy the default working director 


Layered Architecutre
---------------------


from openjdk   
maintainer praveenk@rps.com   
copy demo.jar /home 
expose 8080  
cmd ["java","-jar","demo.jar"] --image5



DOCKER build --tag <imagename> .



==========================================================================
To create any docker image we have to write a Dockerfile
FROM openjdk
MAINTAINER praveen<at>rps
copy demoworld.jar /home
expose 8080
cmd ['java",'-jar","demoworld.jar"]


>sudo docker ps -a 	: check the running containers
>sudo docker images 	: display all images
>sudo docker build .	or sudo docker build <imgname>: build the image
>sudo docker run -d -i -t --name <container name(any name)> <image name(name/id which is generated after build)>
OR
>docker run -d -i -t -p hostport:containerPort <imagename(new img)> :
>sudo docker exec -it <container name> /bin/sh	  : move internally in container
	(ls  ->  cd home  ->  )  


